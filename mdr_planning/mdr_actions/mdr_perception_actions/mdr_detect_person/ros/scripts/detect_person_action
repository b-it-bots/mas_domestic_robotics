#!/usr/bin/env python
import rospy
import smach
from smach_ros import ActionServerWrapper, IntrospectionServer

from mdr_detect_person.skill import DetectPersonSkill


if __name__ == '__main__':
    rospy.init_node('detect_person_server')

    # construct state machine
    sm = DetectPersonSkill()

    # smach viewer
    sis = IntrospectionServer('detect_person_smach_viewer', sm,
                              '/DETECT_PERSON_SMACH_VIEWER')
    sis.start()

    asw = ActionServerWrapper(
        server_name='detect_person_server',
        action_spec=DetectPersonAction,
        wrapped_container=sm,
        succeeded_outcomes=['OVERALL_SUCCESS'],
        aborted_outcomes=['OVERALL_FAILED'],
        preempted_outcomes=['PREEMPTED'],
        goal_key='detect_person_goal',
        feedback_key='detect_person_feedback',
        result_key='detect_person_result')

    # Run the server in a background thread
    asw.run_server()
    rospy.spin()
