#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
Created on 2017.09.21

@author: Patrick Nagel
"""

import sys

import rospy
import roslib
import actionlib

from mdr_listen_action.msg import ListenAction, ListenGoal


def print_usage_info():
    rospy.loginfo("usage: listen <duration>")
    rospy.loginfo("       where the <duration> is measured in seconds and defines "\
    "how long the robot is in listen-mode")
    rospy.sleep(2)
    return raw_input("Enter a duration and confirm with the return key: ")

def give_second_chance(ex):
    rospy.logerr(type(ex).__name__ + ": Received unknown value for <duration> argument")
    user_input_duration = print_usage_info()
    user_input_duration = int(user_input_duration)
    return user_input_duration


def proceed_user_input(goal):
    timeout = 15.0
    rospy.loginfo("Sending action lib goal to listen_server, duration: "\
                  + str(goal.listen_duration))
    client.send_goal(goal)
    client.wait_for_result(rospy.Duration.from_sec(int(timeout)))
    print client.get_result()


if __name__ == '__main__':
    rospy.init_node('listen_client_test')
    client = actionlib.SimpleActionClient('listen_server', ListenAction)
    client.wait_for_server()

    goal = ListenGoal()
    try:
        user_input_duration = sys.argv[1]
        user_input_duration = int(user_input_duration)
        goal.listen_duration = user_input_duration
        proceed_user_input(goal)
    except IndexError as ex:
        try:
            goal.listen_duration = give_second_chance(ex)
            proceed_user_input(goal)
        except ValueError as ex:
            try:
                goal.listen_duration = give_second_chance(ex)
                proceed_user_input(goal)
            except Exception as ex:
                rospy.logerr(type(ex).__name__ + ": You have failed!")
    except ValueError as ex:
        try:
            goal.listen_duration = give_second_chance(ex)
            proceed_user_input(goal)
        except Exception as ex:
            rospy.logerr(type(ex).__name__ + ": You have failed!")
    except Exception as ex:
        rospy.logerr(type(ex).__name__ + ": You have failed!")
