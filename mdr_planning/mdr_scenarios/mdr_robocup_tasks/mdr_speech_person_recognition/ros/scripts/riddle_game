#!/usr/bin/python
import sys

import rospy
import smach
import smach_ros

from mdr_speech_person_recognition.action_states import Dummy


class RiddleGame(smach.StateMachine):
    """The speech and person recognition test"""
    def __init__(self, waypoint=''):
        smach.StateMachine.__init__(self, outcomes=['DONE', 'TIMEOUT'])
        self.waypoint = waypoint

        with self:
            smach.StateMachine.add('REQUEST_OPERATOR',
                                   Dummy(),
                                   transitions={
                                    'succeeded': 'WAIT',
                                    'failed': 'WAIT'})

            smach.StateMachine.add('WAIT',
                                   Dummy(),
                                   transitions={
                                    'succeeded': 'LISTEN',
                                    'failed': 'WAIT'})

            smach.StateMachine.add('LISTEN',
                                   Dummy(),
                                   transitions={
                                    'succeeded': 'COUNT_QUESTION',
                                    'failed': 'LISTEN'})

            smach.StateMachine.add('COUNT_QUESTION',
                                   Dummy(),
                                   transitions={
                                    'succeeded': 'ANSWER',
                                    'failed': 'COUNT_QUESTION'})

            smach.StateMachine.add('ANSWER',
                                   Dummy(),
                                   transitions={
                                    'succeeded': 'CHECK_COUNT',
                                    'failed': 'LISTEN'})

            smach.StateMachine.add('CHECK_COUNT',
                                   Dummy(),
                                   transitions={
                                    'succeeded': 'DONE',
                                    'failed': 'LISTEN'})

        rospy.loginfo("Describe Crowd SM initialized successfully")


def main():
    rospy.init_node('riddle_game')

    SM = RiddleGame()

    smach_viewer = smach_ros.IntrospectionServer('riddle_game',
                                                 SM,
                                                 'RIDDLE_GAME')
    smach_viewer.start()

    result = SM.execute()
    while (result is None):
        rospy.spin()
    rospy.loginfo('Riddle game complete.')
    smach_viewer.stop()


if __name__ == '__main__':
    main()
