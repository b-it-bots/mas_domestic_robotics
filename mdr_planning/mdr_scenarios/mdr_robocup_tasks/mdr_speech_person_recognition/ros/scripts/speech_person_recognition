#!/usr/bin/python
import sys

import rospy
import smach
import smach_ros

from mdr_speech_person_recognition.action_states import Dummy


class SpeechPersonRecognition(smach.StateMachine):
    """The speech and person recognition test"""
    def __init__(self, waypoint=''):
        smach.StateMachine.__init__(self, outcomes=['DONE', 'TIMEOUT'])
        self.waypoint = waypoint

        with self:
            smach.StateMachine.add('ENTER',
                                   Dummy(),
                                   transitions={
                                    'succeeded': 'GO_TO_TEST_WAYPOINT',
                                    'failed': 'ENTER'})
            smach.StateMachine.add('GO_TO_TEST_WAYPOINT',
                                   Dummy(),
                                   transitions={
                                    'succeeded': 'DESCRIBE_CROWD',
                                    'failed': 'GO_TO_TEST_WAYPOINT'})
            smach.StateMachine.add('DESCRIBE_CROWD',
                                   Dummy(),
                                   transitions={
                                    'DONE': 'RIDDLE_GAME',
                                    'TIMEOUT': 'DESCRIBE_CROWD'})
            smach.StateMachine.add('RIDDLE_GAME',
                                   Dummy(),
                                   transitions={
                                    'DONE': 'BLIND_MANS_BLUFF',
                                    'TIMEOUT': 'BLIND_MANS_BLUFF'})
            smach.StateMachine.add('BLIND_MANS_BLUFF',
                                   Dummy(),
                                   transitions={
                                    'DONE': 'LEAVE',
                                    'TIMEOUT': 'BLIND_MANS_BLUFF'})
            smach.StateMachine.add('LEAVE',
                                   Dummy(),
                                   transitions={
                                    'DONE': 'DONE',
                                    'TIMEOUT': 'LEAVE'})

        rospy.loginfo("SPR SM initialized successfully")


def main():
    rospy.init_node('speech_person_recognition')

    SM = SpeechPersonRecognition()

    smach_viewer = smach_ros.IntrospectionServer('speech_person_recognition',
                                                 SM,
                                                 'SPR')
    smach_viewer.start()

    result = SM.execute()
    while (result is None):
        rospy.spin()
    rospy.loginfo('Speech and person recognition complete.')
    smach_viewer.stop()


if __name__ == '__main__':
    main()
