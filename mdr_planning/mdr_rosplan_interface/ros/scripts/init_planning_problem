#!/usr/bin/env python

import rospy
import yaml

import rosplan_knowledge_msgs.srv as rosplan_srvs
import diagnostic_msgs.msg as diag_msgs

class InitPlanningProblem(object):
    def __init__(self):
        problem_file = rospy.get_param('~problem_file', '')
        self.kb_update_service_name = rospy.get_param('~kb_update_service',
                                                      '/kcl_rosplan/update_knowledge_base')

        problem_definition = self.__read_problem_file(problem_file)
        self.__init_problem(problem_definition)
        rospy.loginfo('[init_planning_problem] Problem initialised successfully; shutting down')

    def __read_problem_file(self, problem_file):
        file_stream = open(problem_file, 'r')
        problem_definition = yaml.load(file_stream)
        file_stream.close()
        return problem_definition

    def __init_problem(self, problem_definition):
        kb_update_client = rospy.ServiceProxy(self.kb_update_service_name,
                                              rosplan_srvs.KnowledgeUpdateService)
        try:
            for obj in problem_definition['objects']:
                request = rosplan_srvs.KnowledgeUpdateServiceRequest()
                request.update_type = 0
                request.knowledge.knowledge_type = 0
                request.knowledge.instance_type = obj['obj']['type']
                request.knowledge.instance_name = obj['obj']['name']
                response = kb_update_client(request)
            rospy.loginfo('[init_planning_problem] Objects initialised successfully')

            for pred in problem_definition['init_state']:
                request = rosplan_srvs.KnowledgeUpdateServiceRequest()
                request.update_type = 0
                request.knowledge.knowledge_type = 1
                request.knowledge.attribute_name = pred['predicate']['name']
                for arg in pred['predicate']['args']:
                    arg_msg = diag_msgs.KeyValue()
                    arg_msg.key = arg['arg']['key']
                    arg_msg.value = arg['arg']['value']
                    request.knowledge.values.append(arg_msg)
                response = kb_update_client(request)
            rospy.loginfo('[init_planning_problem] Predicates initialised successfully')
        except rospy.ServiceException, e:
            rospy.logerr('[init_planning_problem] Knowledge update service call failed: %s' % e)

if __name__ == '__main__':
    rospy.init_node('init_planning_problem')
    try:
        InitPlanningProblem()
    except rospy.ROSInterruptException:
        pass
